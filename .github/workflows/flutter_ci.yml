name: Test and Build Flutter

on:
  push:
  pull_request:

permissions: read-all

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: ["apk --debug", "appbundle --debug"]
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Read Version Flutter
        id: read_fvm_config
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: ./.fvmrc
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{fromJson(steps.read_fvm_config.outputs.content).flutter}}

      - name: Check Flutter
        run: flutter doctor -v

      - name: Install packages
        run: flutter pub get

      - name: Run build-runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      - name: Update local.properties
        run: |
          ls -al ${{ github.workspace }}/android/local.properties
          cp ${{ github.workspace }}/android/local.properties ${{ github.workspace }}/android/local.properties.tmp
          rm ${{ github.workspace }}/android/local.properties
          ls -al android/
          grep flutter ${{ github.workspace }}/android/local.properties.tmp > ${{ github.workspace }}/android/local.properties
          cat ${{ github.workspace }}/android/local.properties
          echo "" >> ${{ github.workspace }}/android/local.properties
          echo "sdk.dir=$ANDROID_SDK_PATH" >> ${{ github.workspace }}/android/local.properties          
          echo "flutter.compileSdkVersion=34" >> ${{ github.workspace }}/android/local.properties
          echo "flutter.minSdkVersion=23" >> ${{ github.workspace }}/android/local.properties
          echo "flutter.targetSdkVersion=34" >> ${{ github.workspace }}/android/local.properties
          cat ${{ github.workspace }}/android/local.properties
          
      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          flags: unittests
          verbose: true
          
      - name: Configure Keystore
        run: |
          echo "debugStoreFile=keystore/debug_keystore" >> key.properties
          echo "debugKeyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "debugStorePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "debugKeyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          KEYSTORE_KEY_ALIAS: ${{ secrets.DEBUG_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.DEBUG_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.DEBUG_KEYSTORE_PASSWORD }}
        working-directory: android

      - name: Build
        run: flutter build ${{ matrix.target }}

      - name: Upload apk
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: build/app/outputs/flutter-apk/app-debug.apk

  ui-tests:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write
      pull-requests: write
      repository-projects: write
    strategy:
      fail-fast: false
      matrix:
        api: [31, 32, 33, 34, 35]
    needs: build

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: apk
          path: ./

      - name: Run UI Tests with Maestro
        uses: theolm/maestro-run@v0.3.1-alpha
        with:
          apk-path: "./app-debug.apk"
          test-path: ".maestro"
          report-name: "e-nakes-ui-test-report-api-${{ matrix.api }}"
          emulator-api: ${{ matrix.api }}
          record: "true"

      - name: Download Maestro Report
        uses: actions/download-artifact@v4
        with:
          name: "e-nakes-ui-test-report-api-${{ matrix.api }}"
          path: ./

      - name: Test Reporter
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Maestro UI Tests (API ${{ matrix.api }})
          path: "./report.xml"
          reporter: java-junit
          fail-on-error: true
  
  merge-test-report:
    name: Merge Test Reports
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      checks: write
      pull-requests: write
      repository-projects: write
    needs: ui-tests
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Download all test reports
        uses: actions/download-artifact@v4
        with:
          # Download all artifacts with names starting with 'e-nakes-ui-test-report-api-'
          pattern: 'e-nakes-ui-test-report-api-*'
          path: ./reports
      - name: Install JUnit Report Merger
        run: npm install -g junit-report-merger
      
      - name: Merge JUnit Reports
        run: |
          mkdir -p merged-reports
          junit-report-merger merged-reports/merged-report.xml 'reports/**/*.xml'
      
      - name: Publish Merged Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Merged Maestro UI Test Report
          path: ./merged-reports/merged-report.xml
          reporter: java-junit
          fail-on-error: true
